---
title: PRJNA693857 Analysis
format: html
author: Gennaro Calendo
---

Import and prepare counts and sample metadata

## Set up

```{r}
suppressPackageStartupMessages(library(here))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(SummarizedExperiment))
suppressPackageStartupMessages(library(edgeR))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(patchwork))

datafiles <- here("results", "PRJNA693857", "data-files", "01")
figures <- here("results", "PRJNA693857", "figures", "01")
rdsfiles <- here("results", "PRJNA693857", "rds-files", "01")

invisible(sapply(c(datafiles, figures, rdsfiles), dir.create, showWarnings=F, recursive=T))
```

## Read in `rmskProfiler` counts

```{r}
se <- readRDS(here("data", "PRJNA693857", "03_rmskProfiler", "se.rds"))
rowData(se)$Ranges <- NULL
```

## Read in metadata and align with SE

```{r}
metadata <- fread(here("doc", "PRJNA693857_SraRunTable.csv"))
metadata <- janitor::clean_names(metadata)
```

Collapse metadata to unique bio samples and align to assays

```{r}
metadata <- unique(metadata[, .(geo_accession_exp, bio_project, bio_sample, tissue, treatment, biosite)])
setDF(metadata, rownames=metadata$geo_accession_exp)
metadata <- metadata[colnames(se), ]
colData(se) <- cbind(colData(se), metadata)
```

## Filter for expression

Again, no responder status. Only pre- and post-treatments

```{r}
keep <- filterByExpr(se, group=se$treatment)
se <- se[keep, ]
```

## Compute TPM values

Use lengths imported from `catchSalmon`

```{r}
feature_length <- metadata(se)$annotation[rownames(se), ]$Length
x <- assay(se, "counts") / feature_length
assay(se, "tpm") <- t( t(x) * 1e6 / colSums(x) )

# Create log2 TPMs as well
assay(se, "ltpm") <- log2(assay(se, "tpm") + 1)
```

## Save the final SE object for meta-analysis

```{r}
saveRDS(se, here(rdsfiles, "processed-se.rds"))
```
