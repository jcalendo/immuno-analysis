---
title: PRJNA312948 Analysis
format: html
author: Gennaro Calendo
---

Import and prepare counts and sample metadata

## Set up

```{r}
suppressPackageStartupMessages(library(here))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(SummarizedExperiment))
suppressPackageStartupMessages(library(edgeR))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(patchwork))

datafiles <- here("results", "PRJNA312948", "data-files", "01")
figures <- here("results", "PRJNA312948", "figures", "01")
rdsfiles <- here("results", "PRJNA312948", "rds-files", "01")

invisible(sapply(c(datafiles, figures, rdsfiles), dir.create, showWarnings=F, recursive=T))
```

## Read in `rmskProfiler` counts

```{r}
se <- readRDS(here("data", "PRJNA312948", "03_rmskProfiler", "se.rds"))
rowData(se)$Ranges <- NULL
```

## Read in metadata and align with SE

```{r}
metadata <- fread(here("doc", "PRJNA312948_SraRunTable.csv"))
metadata <- janitor::clean_names(metadata)
```

Clean the remaining metadata columns. "stranded_unstranded_rnaseq" will have to be treated as a 
batch effect to correct log normalized counts with. Recode response status based on 
[RECIST](https://en.wikipedia.org/wiki/Response_evaluation_criteria_in_solid_tumors) codes:

 - Complete response (CR): Disappearance of all target lesions
 - Partial response (PR): At least a 30% decrease in the sum of the LD of target lesions, taking as reference the baseline sum LD
 - Stable disease (SD): Neither sufficient shrinkage to qualify for PR nor sufficient increase to qualify for PD taking as reference the smallest sum LD since the treatment started
 - Progressive disease (PD): At least a 20% increase in the sum of the LD of target lesions, taking as reference the smallest sum LD recorded since the treatment started or the appearance of one or more new lesions

```{r}
metadata[, response := fcase(anti_pd_1_response == "Complete Response", "CR",
                             anti_pd_1_response == "Partial Response", "PR",
                             anti_pd_1_response == "Progressive Disease", "PD",
                             anti_pd_1_response == "Stable disease", "SD",
                             default = NA)]
```

Align with SE object and add as object metadata

```{r}
setDF(metadata, rownames=metadata$geo_accession_exp)
metadata <- metadata[colnames(se), ]
colData(se) <- cbind(colData(se), metadata)
```

## Filter for expression

```{r}
keep <- filterByExpr(se, group=se$response)
se <- se[keep, ]
```

## Compute TPM values

Use lengths imported from `catchSalmon`

```{r}
feature_length <- metadata(se)$annotation[rownames(se), ]$Length
x <- assay(se, "counts") / feature_length
assay(se, "tpm") <- t( t(x) * 1e6 / colSums(x) )

# Create log2 TPMs as well
assay(se, "ltpm") <- log2(assay(se, "tpm") + 1)
```

## Drop single duplicated sample

```{r}
se <- se[, se$biopsy_time != "on-treatment"]
```

## EDA

Most of the variation on PC1 is technical, driven by the RNA-seq prep type. 

```{r}
pca_res <- PCAtools::pca(
    assay(se, "ltpm"), 
    metadata=colData(se), 
    scale=TRUE, 
    center=TRUE, 
    removeVar=0.9
    )

b1 <- PCAtools::biplot(pca_res, colby="response", legendPosition="bottom", lab=NULL)
b2 <- PCAtools::biplot(pca_res, colby="stranded_unstranded_rnaseq", legendPosition="bottom", lab=NULL)
b3 <- PCAtools::biplot(pca_res, colby="disease_status", legendPosition="bottom", lab=NULL)
b4 <- PCAtools::biplot(pca_res, colby="gender", legendPosition="bottom", lab=NULL)

(b1 | b2) / (b3 | b4) 
```

## Compute batch-corrected log TPMS

Use limma to regress away the known batch effects

```{r}
design0 <- model.matrix(~response + gender + disease_status, data=colData(se))

assay(se, "ltpm") <- limma::removeBatchEffect(
    assay(se, "ltpm"), 
    batch=se$stranded_unstranded_rnaseq, 
    design = design0
    )
```

Recompute PCA. This looks better. The obvious technical RNA-seq prep factor has been removed

```{r}
pca_res <- PCAtools::pca(
    assay(se, "ltpm"), 
    metadata=colData(se), 
    scale=TRUE,
    center=TRUE,
    removeVar=0.9
    )

b1 <- PCAtools::biplot(pca_res, colby="response", legendPosition="bottom", lab=NULL)
b2 <- PCAtools::biplot(pca_res, colby="stranded_unstranded_rnaseq", legendPosition="bottom", lab=NULL)
b3 <- PCAtools::biplot(pca_res, colby="disease_status", legendPosition="bottom", lab=NULL)
b4 <- PCAtools::biplot(pca_res, colby="gender", legendPosition="bottom", lab=NULL)

(b1 | b2) / (b3 | b4) 
```

## Save the final SE object for meta-analysis

```{r}
saveRDS(se, here(rdsfiles, "processed-se.rds"))
```
